name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  checkout-and-setup:
    runs-on: ubuntu-latest
    environment: CICD_KEYS
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

  build-and-test:
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    environment: CICD_KEYS

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: CICD_KEYS

    env:
      DOCKER_USERNAME: "${{ vars.DOCKER_USERNAME }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Debug Environment Variables
      run: echo "DOCKER_USERNAME=${{ env.DOCKER_USERNAME }}"

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_USERNAME }}/mayah-shop-server:latest  # Added DockerHub username to the tag

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    environment: CICD_KEYS
    
    env:
      DROPLET_IP: ${{ vars.DROPLET_IP }}
      DROPLET_USER: ${{ vars.DROPLET_USER }}

    steps:
    - name: Print Connection Info
      run: echo "Connecting to ${{ env.DROPLET_IP }}... with ${{ env.DROPLET_USER }}"

    - name: SSH and Pull Latest Code
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.DROPLET_IP }}
        username: ${{ env.DROPLET_USER }}
        key: ${{ secrets.DROPLET_PRIVATE_KEY }}
        script: |
          cd /home/cuongla/mayah-shop-server
          git pull origin main

    - name: SSH and Deploy Docker Container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.DROPLET_IP }}
        username: ${{ env.DROPLET_USER }}
        key: ${{ secrets.DROPLET_PRIVATE_KEY }}
        script: |
          docker pull ${{ env.DOCKER_USERNAME }}/mayah-shop-server:latest  # Pull the image with DockerHub username
          docker stop mayah-shop-server || true
          docker rm mayah-shop-server || true
          docker run --env-file .env -p 4000:4000 --name mayah-shop-server ${{ env.DOCKER_USERNAME }}/mayah-shop-server:latest  # Run the container with DockerHub username
